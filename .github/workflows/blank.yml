# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
                      - nombre: Configurar Java JDK
  usos: acciones/setup-java@v4.7.0
  con:
    La versión de Java que se configurará. Admite una versión completa o parcial de Java. Consulte ejemplos de sintaxis compatibles en el archivo README.
    java-version: # opcional
    # La ruta al archivo `.java-version`. Consulte ejemplos de sintaxis compatibles en el archivo README.
    archivo de versión de java: # opcional
    Distribución de Java. Consulte la lista de distribuciones compatibles en el archivo README.
    distribución:
    # El tipo de paquete (jdk, jre, jdk+fx, jre+fx)
    java-package: # opcional, el valor predeterminado es jdk
    # La arquitectura del paquete (por defecto la arquitectura del ejecutor de acciones)
    arquitectura: # opcional
    # Ruta donde se encuentra el JDK comprimido
    jdkFile: # opcional
    # Configure esta opción si desea que la acción busque la última versión disponible que cumpla con la especificación de la versión.
    check-latest: # opcional
    # ID del repositorio de administración de distribución en el archivo pom.xml. El valor predeterminado es `github`.
    server-id: # opcional, el valor predeterminado es github
    # Nombre de la variable de entorno para el nombre de usuario para la autenticación en el repositorio Apache Maven. El valor predeterminado es $GITHUB_ACTOR
    nombre-de-usuario-servidor: # opcional, el valor predeterminado es GITHUB_ACTOR
    # Nombre de la variable de entorno para la contraseña o token de autenticación en el repositorio Apache Maven. El valor predeterminado es $GITHUB_TOKEN
    contraseña del servidor: # opcional, el valor predeterminado es GITHUB_TOKEN
    Ruta donde se escribirá el archivo settings.xml. El valor predeterminado es ~/.m2.
    ruta de configuración: # opcional
    # Sobrescribir el archivo settings.xml si existe. El valor predeterminado es "true".
    overwrite-settings: # opcional, el valor predeterminado es verdadero
    Clave privada GPG para importar. El valor predeterminado es una cadena vacía.
    clave privada gpg: # opcional
    Nombre de la variable de entorno para la contraseña de la clave privada GPG. El valor predeterminado es $GPG_PASSPHRASE.
    frase de contraseña gpg: # opcional
    # Nombre de la plataforma de compilación donde se almacenarán las dependencias en caché. Puede ser "maven", "gradle" o "sbt".
    caché: # opcional
    # La ruta a un archivo de dependencia: pom.xml, build.gradle, build.sbt, etc. Esta opción se puede usar con la opción `cache`. Si se omite, la acción busca el archivo de dependencia en todo el repositorio. Esta opción admite comodines y una lista de nombres de archivo para almacenar en caché varias dependencias.
    ruta de dependencia de caché: # opcional
    Solución alternativa para pasar el estado del trabajo al paso posterior al trabajo. Esta variable no está diseñada para configuración manual.
    job-status: # opcional, el valor predeterminado es ${{ job.status }}
    # El token utilizado para la autenticación al obtener manifiestos de versiones alojados en github.com, como en el caso de Microsoft Build de OpenJDK. Al ejecutar esta acción en github.com, el valor predeterminado es suficiente. Al ejecutar en GHES, puede pasar un token de acceso personal para github.com si experimenta limitaciones de velocidad.
    token: # opcional, el valor predeterminado es ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Nombre del ID de la cadena de herramientas de Maven si no se desea el nombre predeterminado "${distribution}_${java-version}". Consulte ejemplos de sintaxis compatibles en el archivo de uso avanzado.
    mvn-toolchain-id: # opcional
    # Nombre del proveedor de la cadena de herramientas Maven si no se desea el nombre predeterminado "${distribution}". Consulte ejemplos de sintaxis compatibles en el archivo de uso avanzado.
    mvn-toolchain-vendor: # opcional
          
